#include<math.h>
#include <stdio.h>
#include<string.h>
void print_input(int,int,int);
void hex_to_dec(int,int,int);
void  deci_to_otherconversions(int,int);
int main()
{
    int dataset[11][3] = {{-6, 10, 4}, {-6, 9, 4}, {-6, 10, 5}, {-9, 10, 4}, {237, 10, 8}, {0354, 8, 8}, {0xEB, 16, 8}, {-125, 10, 8},  {65400, 10, 8}, {65400, 10, 16}, {-32701, 10, 16} };
    int i=0;
    int deci = 0;
    for (i=0;i<11;i++)
    {
        print_input(dataset[i][0],dataset[i][1],dataset[i][2]);                              //Printing Input values
        printf("Output:\t\tValue\t\t\tMaximum\t\t\tMinimum\t\t\n");                         //Printing Output headings
        if(dataset[i][1]!=8 && dataset[i][1]!=10 && dataset[i][1]!=16 ){                    //Error for radix
            printf("Error: Radix value is wrong for the input set  %d %d %d \nRadix value should be 8,10 or 16 but here it's %d \n",dataset[i][0],dataset[i][1],dataset[i][2],dataset[i][1]);
            continue;
        }
        if(dataset[i][2]!=4 && dataset[i][2]!=8 && dataset[i][2]!=16 ){                    //Error for Operand
            printf("Error: Operand value is wrong for the input set %d %d %d \nOperand value should be 4,8 or 16 but here it's %d \n",dataset[i][0],dataset[i][1],dataset[i][2],dataset[i][2]);
            continue;
        }
 //Hexadecimal to decimal and Octal to decimal   
        if (dataset[i][1]==16 || dataset[i][1]==8) {                
            deci = 0;
            int oct_or_hexa = dataset[i][0];
            int remainder;
            int power=0;
//Hexadecimal to decimal            
            if(dataset[i][1]==16){                  
            int j =0;
            char result[10]; 
            
            sprintf(result, "%x", dataset[i][0]); 
            printf("\n The string for the num is %s", result);
            for (int j=strlen(result)-1; j>=0; j--) 
          {    
            if (result[j]>='0' && result[j]<='9')    // Converting ASCII 0-9 values to numbers 0-9
           { 
            deci += (result[j] - 48)*pow(16,power); 
            power++;
            } 
            else  if (result[j]>='a' && result[j]<='f') // Converting ASCII a-f values to numbers 10-15
            { 
            deci += (result[j] - 87)*pow(16,power); 
            power++;
           } 
          }
           
        }
           //printf("\n decimal number is %d\n",deci);
//Octal to decimal           
            if(dataset[i][1]==8){                  
             while(oct_or_hexa > 0)
           {
            remainder = oct_or_hexa % 10;
            deci += remainder * pow(8, power);
            oct_or_hexa = oct_or_hexa / 10;
            power++;
           }
           // printf("\n decimal number is %d\n",deci);
            }
         }
        else{
            deci= dataset[i][0];
           // printf("\n decimal number is %d\n",deci);
        }
        deci_to_otherconversions(dataset[i][0]);
    }
    return 0;
}

void print_input(int val,int radix,int operand)
{
 if(radix==8){
     printf("Input:\t\tValue:%o\t\tRadix:%d\t\tOperand Size:%d\t\t\n",val,radix,operand); //print octal input values
       } 
if(radix==16){
     printf("Input:\t\tValue:%x\t\tRadix:%d\t\tOperand Size:%d\t\t\n",val,radix,operand); //print hexadecimal input values
       } 
else{
     printf("Input:\t\tValue:%d\t\tRadix:%d\t\tOperand Size:%d\t\t\n",val,radix,operand); //print other input values
       } 
    return 0;    
}
   
void deci_to_otherconversions(int val)
{
    //Conversion to binary
    
}